{"version":3,"sources":["pages/adminlogin.js"],"names":["Login","history","useHistory","auth","useAuth","useState","showPassword","setshowPassword","useForm","register","handleSubmit","errors","formState","loading","setloading","onSubmit","obj","a","fetch","ROUTES","method","headers","body","JSON","stringify","emailId","password","uniqueCode","code","role","response","json","data","success","login","user","token","push","alert","msg","Loading","className","fullWidth","label","variant","name","id","inputProps","style","fontSize","InputLabelProps","opacity","required","pattern","value","message","error","Boolean","helperText","type","InputProps","endAdornment","position","onClick","prev","onMouseDown","event","preventDefault","edge","color","to"],"mappings":"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","file":"static/js/7.e91ffca4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/login.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport Loading from \"./Loading\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const auth = useAuth();\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const onSubmit = async (obj) => {\r\n    setloading(true);\r\n    const response = await fetch(ROUTES.BASELINK + \"/api/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        emailId: obj.emailId,\r\n        password: obj.password,\r\n        uniqueCode: obj.code,\r\n        role: \"admin\",\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      setloading(false);\r\n      auth.login(data.data.user, data.data.token);\r\n      history.push(\"/admin\");\r\n    } else {\r\n      alert(\"Error: \" + data.msg);\r\n    }\r\n    setloading(false);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Loading Loading={loading} />\r\n      <div className=\"container-fluid loginpage\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4 offset-7\">\r\n            <div className=\"container-fluid loginBox\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 text-left\">\r\n                  <h1>Admin Login</h1>\r\n                </div>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-12\">\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email Id\"\r\n                      variant=\"standard\"\r\n                      name=\"emailId\"\r\n                      id=\"emailId\"\r\n                      inputProps={{ style: { fontSize: 24 } }}\r\n                      InputLabelProps={{\r\n                        style: { fontSize: 24, opacity: 0.5 },\r\n                      }}\r\n                      {...register(\"emailId\", {\r\n                        required: \"This field is required.\",\r\n                        pattern: {\r\n                          value: /\\S+@\\S+\\.\\S+/,\r\n                          message: \"Invalid Email Id.\",\r\n                        },\r\n                      })}\r\n                      error={Boolean(errors.emailId)}\r\n                      helperText={errors.emailId?.message}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-12\">\r\n                    <TextField\r\n                      fullWidth\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      label=\"Password\"\r\n                      variant=\"standard\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      inputProps={{ style: { fontSize: 24 } }}\r\n                      InputLabelProps={{\r\n                        style: { fontSize: 24, opacity: 0.5 },\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={() => setshowPassword((prev) => !prev)}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <VisibilityOff className=\"password-visibility-icon\" />\r\n                              ) : (\r\n                                <Visibility className=\"password-visibility-icon\" />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      {...register(\"password\", {\r\n                        required: \"This field is required.\",\r\n                      })}\r\n                      error={Boolean(errors.password)}\r\n                      helperText={errors.password?.message}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row pt-3\">\r\n                  <div className=\"col-12\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"login-btn\"\r\n                      variant=\"contained\"\r\n                      color=\"success\"\r\n                    >\r\n                      <h4 className=\"login-btn-text\">Login</h4>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <div className=\"row pt-2\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"login-signup-text\">\r\n                    Don't have an account?{\" \"}\r\n                    <Link to={ROUTES.ADMINSIGNUP} className=\"login-signup-link\">\r\n                      Sign up\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"login-signup-text\">\r\n                    <Link\r\n                      to={ROUTES.FORGOTPASSWORD}\r\n                      className=\"login-signup-link\"\r\n                    >\r\n                      Forgot Password?\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}