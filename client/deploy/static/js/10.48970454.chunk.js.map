{"version":3,"sources":["component/client/ClientSignUp.js","component/client/SupplierSignUp.js","pages/signup.js"],"names":["ClientSignUp","useState","showPassword","setshowPassword","useForm","register","handleSubmit","errors","formState","control","onSubmit","obj","a","fetch","ROUTES","method","headers","body","JSON","stringify","emailId","password","role","username","mobileNo","response","json","data","success","alert","msg","className","TextField","fullWidth","id","name","label","variant","size","inputProps","style","fontSize","InputLabelProps","opacity","required","minLength","value","message","error","Boolean","helperText","type","pattern","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","prev","onMouseDown","event","preventDefault","edge","Button","color","to","SupplierSignUp","console","log","supplierEmailId","supplierPassword","supplierUserName","supplierMobileNo","companyName","SignUp","menu","setmenu","Navbar","src","alt","textAlign"],"mappings":"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","file":"static/js/10.48970454.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function ClientSignUp() {\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (obj) => {\r\n    const response = await fetch(ROUTES.BASELINK + \"/api/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        emailId: obj.emailId,\r\n        password: obj.password,\r\n        role: \"client\",\r\n        username: obj.username,\r\n        mobileNo: obj.mobileNo,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      alert(\r\n        `Successfully registered as client, verification mail sent on email.`\r\n      );\r\n    } else {\r\n      alert(\"Error: \" + data.msg);\r\n    }\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mt-2\">\r\n        <TextField\r\n          fullWidth\r\n          id=\"username\"\r\n          name=\"username\"\r\n          label=\"User Name\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"username\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 3, message: \"Minimum 3 characters required.\" },\r\n          })}\r\n          error={Boolean(errors.username)}\r\n          helperText={errors.username?.message}\r\n        />\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <TextField\r\n          type=\"number\"\r\n          fullWidth\r\n          id=\"mobileNo\"\r\n          name=\"mobileNo\"\r\n          label=\"Mobile No.\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"mobileNo\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 9, message: \"Invalid Phone No.\" },\r\n          })}\r\n          error={Boolean(errors.mobileNo)}\r\n          helperText={errors.mobileNo?.message}\r\n        />\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <TextField\r\n          type=\"text\"\r\n          fullWidth\r\n          id=\"emailId\"\r\n          name=\"emailId\"\r\n          label=\"Email Id\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"emailId\", {\r\n            required: \"This field is required.\",\r\n            pattern: {\r\n              value: /\\S+@\\S+\\.\\S+/,\r\n              message: \"Invalid Email Id.\",\r\n            },\r\n          })}\r\n          error={Boolean(errors.emailId)}\r\n          helperText={errors.emailId?.message}\r\n        />\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <TextField\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          fullWidth\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setshowPassword((prev) => !prev)}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? (\r\n                    <VisibilityOff className=\"password-visibility-icon\" />\r\n                  ) : (\r\n                    <Visibility className=\"password-visibility-icon\" />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          control={control}\r\n          {...register(\"password\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 6, message: \"Password too short.\" },\r\n          })}\r\n          error={Boolean(errors.password)}\r\n          helperText={errors.password?.message}\r\n        />\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"signup-btn\"\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          <div className=\"signup-btn-text\">Create Account</div>\r\n        </Button>\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <div className=\"signup-login-text\">\r\n          Already have an account?{\" \"}\r\n          <Link to={ROUTES.LOGIN} className=\"signup-login-link\">\r\n            Log In\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <div className=\"signup-login-text\">\r\n          Resend Verification Link?\r\n          <Link to={ROUTES.REVERIFY} className=\"signup-login-link\">\r\n            Reverify\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function SupplierSignUp() {\r\n  const [showPassword, setshowPassword] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (obj) => {\r\n    console.log(obj);\r\n    const response = await fetch(ROUTES.BASELINK+ \"/api/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        emailId: obj.supplierEmailId,\r\n        password: obj.supplierPassword,\r\n        role: \"supplier\",\r\n        username: obj.supplierUserName,\r\n        mobileNo: obj.supplierMobileNo,\r\n        companyName: obj.companyName,\r\n      }),\r\n    });\r\n    console.log(\"response : \", response);\r\n    const data = await response.json();\r\n    console.log(\"response json : \", data);\r\n    if (data.success) {\r\n      alert(\r\n        `Successfully registered as supplier ,verification mail sent on email.`\r\n      );\r\n    } else {\r\n      alert(\"Error: \" + data.msg);\r\n    }\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"\">\r\n        <TextField\r\n          fullWidth\r\n          id=\"companyName\"\r\n          name=\"companyName\"\r\n          label=\"Company Name\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"companyName\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 3, message: \"Minimum 3 characters required.\" },\r\n          })}\r\n          error={Boolean(errors.companyName)}\r\n          helperText={errors.companyName?.message}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <TextField\r\n          fullWidth\r\n          id=\"supplierUserName\"\r\n          name=\"supplierUserName\"\r\n          label=\"User Name\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"supplierUserName\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 3, message: \"Minimum 3 characters required.\" },\r\n          })}\r\n          error={Boolean(errors.supplierUserName)}\r\n          helperText={errors.supplierUserName?.message}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <TextField\r\n          type=\"number\"\r\n          fullWidth\r\n          id=\"supplierMobileNo\"\r\n          name=\"supplierMobileNo\"\r\n          label=\"Mobile No.\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"supplierMobileNo\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 9, message: \"Invalid Phone No.\" },\r\n          })}\r\n          error={Boolean(errors.supplierMobileNo)}\r\n          helperText={errors.supplierMobileNo?.message}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <TextField\r\n          type=\"text\"\r\n          fullWidth\r\n          id=\"supplierEmailId\"\r\n          name=\"supplierEmailId\"\r\n          label=\"Email Id\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          control={control}\r\n          {...register(\"supplierEmailId\", {\r\n            required: \"This field is required.\",\r\n            pattern: {\r\n              value: /\\S+@\\S+\\.\\S+/,\r\n              message: \"Invalid Email Id.\",\r\n            },\r\n          })}\r\n          error={Boolean(errors.supplierEmailId)}\r\n          helperText={errors.supplierEmailId?.message}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <TextField\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          fullWidth\r\n          id=\"supplierPassword\"\r\n          name=\"supplierPassword\"\r\n          label=\"Password\"\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          inputProps={{ style: { fontSize: 24 } }}\r\n          InputLabelProps={{ style: { fontSize: 24, opacity: 0.5 } }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setshowPassword((prev) => !prev)}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? (\r\n                    <VisibilityOff className=\"password-visibility-icon\" />\r\n                  ) : (\r\n                    <Visibility className=\"password-visibility-icon\" />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          control={control}\r\n          {...register(\"supplierPassword\", {\r\n            required: \"This field is required.\",\r\n            minLength: { value: 6, message: \"Password too short.\" },\r\n          })}\r\n          error={Boolean(errors.supplierPassword)}\r\n          helperText={errors.supplierPassword?.message}\r\n        />\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"signup-btn\"\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          <div className=\"signup-btn-text\">Create Account</div>\r\n        </Button>\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <div className=\"signup-login-text\">\r\n          Already have an account?{\" \"}\r\n          <Link to={ROUTES.LOGIN} className=\"signup-login-link\">\r\n            Log In\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <div className=\"signup-login-text\">\r\n          Resend Verification Link?\r\n          <Link to={ROUTES.REVERIFY} className=\"signup-login-link\">\r\n            Reverify\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/signup.css\";\r\nimport ClientSignUp from \"../component/client/ClientSignUp\";\r\nimport SupplierSignUp from \"../component/client/SupplierSignUp\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\n\r\nexport default function SignUp() {\r\n  const [menu, setmenu] = useState(\"client\");\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container-fluid signupPage\">\r\n        <img\r\n          className=\"signup-Logo\"\r\n          src=\"/images/SignupPageImg.png\"\r\n          alt=\"logo\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"container-fluid signupBox\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 text-left\">\r\n                  <div className=\"signup-Header\">Sign Up</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row signupMenuBar\">\r\n                <div className=\"col-4\" style={{ textAlign: \"center\" }}>\r\n                  <div\r\n                    className={\r\n                      menu === \"client\"\r\n                        ? \"signupMenu-btn active\"\r\n                        : \"signupMenu-btn\"\r\n                    }\r\n                    onClick={() => setmenu(\"client\")}\r\n                  >\r\n                    Client\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-4\" style={{ textAlign: \"center\" }}>\r\n                  <div className=\"signupMenu-OR\">-OR-</div>\r\n                </div>\r\n                <div className=\"col-4\" style={{ textAlign: \"center\" }}>\r\n                  <div\r\n                    className={\r\n                      menu === \"supplier\"\r\n                        ? \"signupMenu-btn active\"\r\n                        : \"signupMenu-btn\"\r\n                    }\r\n                    onClick={() => setmenu(\"supplier\")}\r\n                  >\r\n                    Supplier\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {menu === \"client\" ? <ClientSignUp /> : <SupplierSignUp />}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}