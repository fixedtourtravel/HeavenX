{"version":3,"sources":["component/client/MyOrders.js"],"names":["MyOrders","useState","orders","setOrders","orders1","setOrders1","rowsPerPage","setRowsPerPage","React","page","setPage","useLocation","useEffect","axios","method","url","ROUTES","headers","localStorage","getItem","TOKEN_ID","then","result","data","success","catch","err","console","log","class","className","dataFunction","length","slice","map","order","i","index","to","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","target","value"],"mappings":"mRAYe,SAASA,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwBC,IAAMP,SAAS,GAAvC,mBAAOQ,EAAP,KAAaC,EAAb,KAEiBC,cAkCjB,OAJAC,qBAAU,WAlBRC,IAAM,CACJC,OAAQ,MACRC,IAAKC,IAAkB,mBACvBC,QAAS,CACP,eAAgB,mBAChB,eAAe,GAAf,OAAmBC,aAAaC,QAAQC,SAGzCC,MAAK,SAACC,GACDA,EAAOC,KAAKC,UACdrB,EAAUmB,EAAOC,KAAKA,MACtBlB,EAAWiB,EAAOC,KAAKA,UAG1BE,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAKf,IAGD,qCACE,cAAC,IAAD,IACA,sBAAKG,MAAM,SAAX,UACE,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,gBAAf,uBACA,cAAC,IAAD,CAAMP,KAAMrB,EAAQ6B,aAAc1B,OAEpC,qBAAKyB,UAAU,sBAAf,SACG1B,EAAQ4B,OACP5B,EACG6B,MAAMxB,EAAOH,EAAaG,EAAOH,EAAcA,GAC/C4B,KAAI,SAACC,EAAOC,GAAR,OAAc,cAAC,IAAD,CAAWD,MAAOA,EAAOE,MAAOD,EAAI,OAEzD,iDAEE,cAAC,IAAD,CAAME,GAAG,SAAT,SACE,6DAMV,cAAC,IAAD,CACEC,mBAAoB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KAC9CC,UAAU,MACVC,MAAOvC,EAAO8B,OACd1B,YAAaA,EACbG,KAAMA,EACNiC,aA7DmB,SAACC,EAAOC,GAC/BlC,EAAQkC,IA6DJC,oBA1D0B,SAACF,GAC/BpC,GAAgBoC,EAAMG,OAAOC,OAC7BrC,EAAQ","file":"static/js/11.e078e4ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/home.css\";\r\nimport OrderCard from \"./OrderCard/OrderCard\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../../pages/Navbar/Navbar\";\r\nimport axios from \"axios\";\r\nimport { TOKEN_ID } from \"../../utils/constants\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport Sort from \"../admin/Report/Sort\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nexport default function MyOrders() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orders1, setOrders1] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const location = useLocation();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const getOrders = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: ROUTES.BASELINK + \"/query/getOrders\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-auth-token\": `${localStorage.getItem(TOKEN_ID)}`,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        if (result.data.success) {\r\n          setOrders(result.data.data);\r\n          setOrders1(result.data.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div class=\"orders\">\r\n        <div className=\"order_head\">\r\n          <div className=\"headingOrders\">My Orders</div>\r\n          <Sort data={orders} dataFunction={setOrders1} />\r\n        </div>\r\n        <div className=\"placesCardContainer\">\r\n          {orders1.length ? (\r\n            orders1\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((order, i) => <OrderCard order={order} index={i + 1} />)\r\n          ) : (\r\n            <div>\r\n              No orders yet.\r\n              <Link to=\"/query\">\r\n                <button>Create Query?</button>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[1, 2, 5, 10, 15, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={orders.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}