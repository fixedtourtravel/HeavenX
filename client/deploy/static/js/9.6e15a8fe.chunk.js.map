{"version":3,"sources":["pages/login.js"],"names":["Login","useState","active","setActive","loading","setloading","history","useHistory","auth","useAuth","showPassword","setshowPassword","useForm","register","handleSubmit","errors","formState","onSubmit","obj","a","fetch","ROUTES","method","headers","localStorage","getItem","TOKEN_ID","body","JSON","stringify","emailId","password","uniqueCode","code","role","response","json","data","success","login","user","token","push","alert","msg","className","Loading","onClick","fullWidth","label","variant","name","id","size","inputProps","style","fontSize","InputLabelProps","opacity","required","error","Boolean","helperText","message","pattern","value","type","InputProps","endAdornment","position","prev","onMouseDown","event","preventDefault","edge","color","to"],"mappings":"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","file":"static/js/9.6e15a8fe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/login.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport Loading from \"./Loading\";\r\nimport { TOKEN_ID } from \"../utils/constants\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\n\r\nexport default function Login() {\r\n  const [active, setActive] = useState(true);\r\n  const [loading, setloading] = useState(false);\r\n  const history = useHistory();\r\n  const auth = useAuth();\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (obj) => {\r\n    setloading(true);\r\n    const response = await fetch(ROUTES.BASELINK + \"/api/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": `${localStorage.getItem(TOKEN_ID)}`,\r\n      },\r\n      body: JSON.stringify({\r\n        emailId: obj.emailId,\r\n        password: obj.password,\r\n        uniqueCode: obj.code,\r\n        role: active ? \"client\" : \"supplier\",\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      setloading(false);\r\n      auth.login(data.data.user, data.data.token);\r\n      if (data.data.user.role === \"supplier\") {\r\n        history.push(\"/vendor/home\");\r\n      } else {\r\n        history.push(\"/query\");\r\n      }\r\n    } else {\r\n      alert(\"Error: \" + data.msg);\r\n    }\r\n    setloading(false);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container-fluid loginpage\">\r\n        <Loading Loading={loading} />\r\n        <div className=\"row\">\r\n          <div className=\"col-4 offset-7\">\r\n            <div className=\"container-fluid loginBox\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 login-header\">\r\n                  <h1>Log in</h1>\r\n                  <div className=\"login-switch\">\r\n                    <div\r\n                      className={active ? \"loginactive\" : \"loginnotactive\"}\r\n                      onClick={() => setActive(true)}\r\n                    >\r\n                      Client\r\n                    </div>\r\n                    <div\r\n                      className={!active ? \"loginactive\" : \"loginnotactive\"}\r\n                      onClick={() => setActive(false)}\r\n                    >\r\n                      Supplier\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row mt-2\">\r\n                  {!active && (\r\n                    <div className=\"col-12\">\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Supplier Code\"\r\n                        variant=\"standard\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        size=\"medium\"\r\n                        inputProps={{ style: { fontSize: 24 } }}\r\n                        InputLabelProps={{\r\n                          style: { fontSize: 24, opacity: 0.5 },\r\n                        }}\r\n                        {...register(\"code\", {\r\n                          required: \"This field is required.\",\r\n                        })}\r\n                        error={Boolean(errors.code)}\r\n                        helperText={errors.code?.message}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-12\">\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email Id\"\r\n                      variant=\"standard\"\r\n                      name=\"emailId\"\r\n                      id=\"emailId\"\r\n                      inputProps={{ style: { fontSize: 24 } }}\r\n                      InputLabelProps={{\r\n                        style: { fontSize: 24, opacity: 0.5 },\r\n                      }}\r\n                      {...register(\"emailId\", {\r\n                        required: \"This field is required.\",\r\n                        pattern: {\r\n                          value: /\\S+@\\S+\\.\\S+/,\r\n                          message: \"Invalid Email Id.\",\r\n                        },\r\n                      })}\r\n                      error={Boolean(errors.emailId)}\r\n                      helperText={errors.emailId?.message}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-12\">\r\n                    <TextField\r\n                      fullWidth\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      label=\"Password\"\r\n                      variant=\"standard\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      inputProps={{ style: { fontSize: 24 } }}\r\n                      InputLabelProps={{\r\n                        style: { fontSize: 24, opacity: 0.5 },\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={() => setshowPassword((prev) => !prev)}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <VisibilityOff className=\"password-visibility-icon\" />\r\n                              ) : (\r\n                                <Visibility className=\"password-visibility-icon\" />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      {...register(\"password\", {\r\n                        required: \"This field is required.\",\r\n                      })}\r\n                      error={Boolean(errors.password)}\r\n                      helperText={errors.password?.message}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row pt-3\">\r\n                  <div className=\"col-12\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"login-btn\"\r\n                      variant=\"contained\"\r\n                      color=\"success\"\r\n                    >\r\n                      <h4 className=\"login-btn-text\">Login</h4>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <div className=\"row pt-2\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"login-signup-text\">\r\n                    Don't have an account?{\" \"}\r\n                    <Link to={ROUTES.SIGNUP} className=\"login-signup-link\">\r\n                      Sign up\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"login-signup-text\">\r\n                    <Link\r\n                      to={ROUTES.FORGOTPASSWORD}\r\n                      className=\"login-signup-link\"\r\n                    >\r\n                      Forgot Password?\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}